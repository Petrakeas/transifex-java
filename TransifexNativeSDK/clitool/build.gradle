plugins {
    id 'java'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.transifex.clitool.MainClass',
                "Implementation-Title": "Transifex command-line tool for Android",
                "Implementation-Version": rootProject.ext.cliVersion
        )
    }

    archivesBaseName = "transifex"

    // Add dependencies in the final jar file to create a fat jar
    // https://discuss.gradle.org/t/how-to-include-dependencies-in-jar/19571/18
    from {
        configurations.runtimeClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// Read the source code using UTF-8
// https://gist.github.com/rponte/d660919434d094bbd35a1aabf7ef1bf0
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
javadoc.options.encoding = 'UTF-8'

tasks.withType(Test) {
    // Use UTF-8 in the JVM that executes the test gradle tasks
    systemProperty "file.encoding", "UTF-8"
}

dependencies {
    compileOnly "androidx.annotation:annotation:$versions.androidXAnnotation"
    implementation 'org.jdom:jdom2:2.0.6'
    implementation 'info.picocli:picocli:4.6.3'
    implementation project(':common')

    testCompileOnly "androidx.annotation:annotation:$versions.androidXAnnotation"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    testImplementation 'com.google.code.gson:gson:2.8.9'
    testImplementation testFixtures(project(':common'))
}