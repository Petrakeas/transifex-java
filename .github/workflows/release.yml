# This workflow is triggered by new releases and performes these steps: 
# * it builds and uploads the CLI tool as an artifact to the release that triggered it
# * it generates and deploys the documentation to Github pages and it builds and 
#   publishes the sdk to Maven.
# If the tag ends with "SNAPSHOT", only publishing to Maven takes place.

name: Release

on:
  release:
    types: [published]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        architecture: x64
    - name: Set up Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.0
    - name: Grant execute permission for gradlew
      working-directory: ./TransifexNativeSDK
      run: chmod +x gradlew
    
    - name: Assemble clitool jar
      if:  ${{ !endsWith(github.event.release.tag_name, 'SNAPSHOT') }}
      working-directory: ./TransifexNativeSDK
      run: ./gradlew clitool:assemble
    - name : Upload clitool's jar to release
      if:  ${{ !endsWith(github.event.release.tag_name, 'SNAPSHOT') }}
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: 'transifex.jar'
        asset_path: TransifexNativeSDK/clitool/build/libs/transifex.jar
        asset_content_type: application/java-archive
      
    - name: Generate Javadoc
      if:  ${{ !endsWith(github.event.release.tag_name, 'SNAPSHOT') }}
      working-directory: ./TransifexNativeSDK
      run: ./gradlew aggregatedJavadoc
    - name: Deploy to GitHub Pages
      if:  ${{ !endsWith(github.event.release.tag_name, 'SNAPSHOT') }}
      uses: JamesIves/github-pages-deploy-action@4.1.1
      with: 
        branch: documentation
        folder: TransifexNativeSDK/build/docs/javadoc
        target-folder: docs
        
    - name: Build and publish SDK to Maven
      working-directory: ./TransifexNativeSDK
      env:
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        PGP_KEY_CONTENTS: ${{ secrets.PGP_KEY_CONTENTS }}
      run: |
        ./gradlew publishReleasePublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository
        ./gradlew cleanTmp
    
   